@page "/elevator"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

<PageTitle>Elevator States</PageTitle>
<h3>Elevator States</h3>
<hr />

@if (elevatorStates == null || !elevatorStates.Any())
{
    <p>Loading elevator states...</p>
}
else
{
    <div class="row">
        <div class="col-md-12 my-1">
            <div class="row">
                @foreach (var state in elevatorStates.Where(s=> s != null))
                {
                    <div class="col my-4">
                        <div class="card">
                            <div class="card-header bg-dark text-white font-weight-bold">
                                Elevator &nbsp; @state.Id
                            </div>
                            <div class="card-body">
                                <p class="card-text">Current Floor: @state.CurrentFloor</p>
                                <p class="card-text">Current Load: @state.CurrentLoad</p>
                                <p class="card-text">Direction: @state.Direction</p>
                                <p class="card-text">Status: @state.Status</p>
                            </div>
                        </div>
                    </div>
                }
                
            </div>
        </div>
    </div>
}

<!-- Additional markup for forms, errors, and other UI elements -->
<div class="row">
    <!-- Request Elevator Form -->
    <div class="col-md-12 my-1">
        <div class="row">
            <div class="col my-4">
                <div class="card m-1">
                    <div class="card-header bg-black text-white font-weight-bold">
                        Request Elevator
                    </div>
                    <div class="card-body">

                        @if (isFormVisible)
                        {
                            <div class="request-form">

                                <EditForm Model="@elevatorRequest" OnValidSubmit="HandleValidSubmit">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />

                                    @if (FromFloor == 1 && Direction == 2)
                                    {
                                        <div class="mb-3">
                                            <label for="toFloor" class="form-label">To Floor</label>
                                            <InputNumber id="toFloor"
                                                         @bind-Value="ToFloor"
                                                         class="form-control"
                                                         min="1" max="3" />@*  3 Basements *@
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="mb-3">
                                            <label for="toFloor" class="form-label">To Floor</label>
                                            <InputNumber id="toFloor"
                                                         @bind-Value="ToFloor"
                                                         class="form-control"
                                                         min="1" max="20" />
                                        </div>
                                    }


                                    <div class="mb-3">
                                        <label for="peopleCount" class="form-label">Number of Passengers</label>
                                        <InputNumber id="peopleCount"
                                                     @bind-Value="PeopleCount"
                                                     class="form-control" />
                                    </div>

                                    <div class="mb-3">
                                        <button type="submit" class="btn btn-primary btn-sm">Request Elevator</button>
                                    </div>
                                </EditForm>

                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col my-1">
        <div class="d-flex flex-wrap justify-content-md-between">
            @foreach (var floor in Floors)
            {
                <div class="floor-card col-md-2 mb-2 mx-1">
                    <div class="card">
                        <div class="card-header text-white text-center" style="background-color: #808080;">
                            Floor @floor.Id
                        </div>
                        <div class="card-body text-center">
                            <button class="btn btn-sm text-white me-1" style="background-color: #302626;" @onclick="() => OpenRequestForm(floor.Id, 0)">Up</button>
                            <button class="btn btn-success btn-sm me-1" @onclick="() => OpenRequestForm(floor.Id, 1)">Down</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<div class="row">
    <div class="col my-1">
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger" role="alert">
                @errorMessage
            </div>
        }
    </div>
</div>

<hr />
